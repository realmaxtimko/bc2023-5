{
	"info": {
		"_postman_id": "08bb54f3-0b63-4ef6-bc1d-85cb2e63a08e",
		"name": "lab5Web",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30949283"
	},
	"item": [
		{
			"name": "get /notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get /notes\", () => {",
							"    pm.expect(pm.response.text()).to.equal(\"[]\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "localhost:8000/notes",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "get /UploadForm.html",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get form\", () => {",
							"    pm.expect(pm.response.text()).to.include(\"<!DOCTYPE html>\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/UploadForm.html",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"UploadForm.html"
					]
				}
			},
			"response": []
		},
		{
			"name": "post /upload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"post_test\", () => {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "note_name",
							"value": "my_note",
							"type": "text"
						},
						{
							"key": "note",
							"value": "some text",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/upload",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "get /notes/my_note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"post_check\", () => {",
							"    pm.response.to.have.body(\"some text\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/notes/my_note",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"notes",
						"my_note"
					]
				}
			},
			"response": []
		},
		{
			"name": "get /notes/my_note(error)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"post_check(error)\", () => {",
							"    pm.response.to.have.status(404)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/notes/non_existing_note",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"notes",
						"non_existing_note"
					]
				}
			},
			"response": []
		},
		{
			"name": "post /upload(error)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"post_test(error)\", () => {",
							"    pm.response.to.have.status(400);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "note_name",
							"value": "my_note",
							"type": "text"
						},
						{
							"key": "note",
							"value": "some text2",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/upload",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "put my_note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"put_test\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "some text2",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/notes/my_note",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"notes",
						"my_note"
					]
				}
			},
			"response": []
		},
		{
			"name": "get notes/my_note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get /notes/my_note\", () => {",
							"    pm.expect(pm.response.text()).to.equal(\"some text2\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/notes/my_note",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"notes",
						"my_note"
					]
				}
			},
			"response": []
		},
		{
			"name": "put my_note(error)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"put_test\", () => {",
							"    pm.response.to.have.status(404)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "note",
							"value": "some text2",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/notes/non_existing_note",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"notes",
						"non_existing_note"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete /notes/my_note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"put_test\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8000/notes/my_note",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"notes",
						"my_note"
					]
				}
			},
			"response": []
		},
		{
			"name": "get /notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get /notes\", () => {",
							"    pm.expect(pm.response.text()).to.equal(\"[]\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/notes",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete /notes/my_note(error)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"put_test\", () => {",
							"    pm.response.to.have.status(404)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8000/notes/non_existing_note",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"notes",
						"non_existing_note"
					]
				}
			},
			"response": []
		}
	]
}
